{"version":3,"sources":["servis/contacts-API.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-actions.js","components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/Navigation.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppAll.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reduser-api.js","redux/store.js","index.js"],"names":["fetchConactsPost","obj","a","axios","post","data","fetchConactsDelete","id","delete","defaults","baseURL","fetchContacts","dispatch","allActions","fetchContactRequest","get","fetchContactSucess","fetchContactError","message","contactsFetchPost","createAsyncThunk","newContact","rejectWithValue","getState","contacts","entris","find","contact","name","toLowerCase","alert","conactsAPI","contactsFetchDelete","formSubmit","createAction","number","payload","uuidv4","deleteContact","filters","module","exports","token","headers","common","Authorization","register","credentials","console","log","logIn","operations","logOut","fetchCurrentUser","_","thunkAPI","state","persistedToken","auth","authSelectors","getIsLoggedIn","isLoggedIn","getUsername","user","getIsFetchingCurrent","isFetchingCurrentUser","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLogIn","useSelector","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","defaultAvatar","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","Container","children","className","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","Contacts","UploadView","App","useEffect","fallback","path","createReducer","filter","isLoding","pending","rejected","error","reducerFilter","allReducer","contactsReduscer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9dad83f5.chunk.js","sourcesContent":["/** @format */\n\nimport axios from \"axios\";\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\n// const token = {\n//   set(token) {\n//     axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n//   },\n//   unset() {\n//     axios.defaults.headers.common.Authorization = \"\";\n//   },\n// };\n\nexport async function fetchConacts() {\n  const { data } = await axios.get(`/contacts`);\n  // token.set(data.token);\n  return data;\n}\n\nexport async function fetchConactsPost(obj) {\n  const { data } = await axios.post(`/contacts`, obj);\n  // token.set(data.token);\n  return data;\n}\n\nexport async function fetchConactsDelete(id) {\n  const { data } = await axios.delete(`/contacts/${id}`);\n  return data;\n}\n","/** @format */\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport * as conactsAPI from \"../../servis/contacts-API\";\nimport allActions from \"./contacts-actions\";\n\nexport const fetchContacts = () => async (dispatch) => {\n  dispatch(allActions.fetchContactRequest());\n\n  try {\n    const { data } = await axios.get(\"/contacts\");\n    dispatch(allActions.fetchContactSucess(data));\n  } catch (error) {\n    dispatch(allActions.fetchContactError(error.message));\n  }\n};\n\n// export const contactsFetch = createAsyncThunk(\n//   \"/contacts/fetchContact\",\n//   async (_, { rejectWithValue }) => {\n//     try {\n//       const { data } = await axios.get(\"/contacts\");\n//       return data;\n//     } catch (error) {\n//       return rejectWithValue(error);\n//     }\n//   }\n// );\n\nexport const contactsFetchPost = createAsyncThunk(\n  \"/contacts/contactsFetchPost\",\n  async (newContact, { rejectWithValue, getState }) => {\n    try {\n      const arryFindName = getState().contacts.entris.find(\n        (contact) =>\n          contact?.name?.toLowerCase() === newContact.name.toLowerCase()\n      );\n      if (arryFindName) {\n        alert(`Ошибка, контакт с данным именем ${newContact.name} уже есть`);\n        return null;\n      }\n      // const { data } = await axios.post(\"/contacts\", newContact);\n      const contacts = await conactsAPI.fetchConactsPost(newContact);\n\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const contactsFetchDelete = createAsyncThunk(\n  \"/contacts/contactsFetchDelete\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await conactsAPI.fetchConactsDelete(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","/** @format */\nimport { v4 as uuidv4 } from \"uuid\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nconst formSubmit = createAction(\"add_Contact\", ({ name, number }) => ({\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction(\"delete_Contact\");\n\nconst filters = createAction(\"filter_contact\");\n\nconst fetchContactRequest = createAction(\"/contacts/fetchContactRequest\");\nconst fetchContactSucess = createAction(\"/contacts/fetchContactSucess\");\nconst fetchContactError = createAction(\"/contacts/fetchContactError\");\n\nconst allActions = {\n  formSubmit,\n  deleteContact,\n  filters,\n  fetchContactRequest,\n  fetchContactSucess,\n  fetchContactError,\n};\n\nexport default allActions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","/** @format */\n\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/signup\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    await axios.post(\"/users/logout\");\n    token.unset();\n  } catch (error) {\n    console.log(error.message);\n  }\n});\n\nconst fetchCurrentUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      return data;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n);\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n};\nexport default operations;\n","/** @format */\n\nconst getIsLoggedIn = (state) => state.auth.isLoggedIn;\n\nconst getUsername = (state) => state.auth.user.name;\n\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser;\n\nconst authSelectors = {\n  getIsLoggedIn,\n  getUsername,\n  getIsFetchingCurrent,\n};\nexport default authSelectors;\n","import { createSlice } from '@reduxjs/toolkit';\nimport authOperations from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\n\nexport default authSlice.reducer;\n","/** @format */\n\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { authSelectors } from \"redux/auth\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => {\n  const isLogIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Главная\n      </NavLink>\n      {isLogIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Телефонная книга\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/default-avatar.b50d0699.png\";","/** @format */\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport defaultAvatar from \"./default-avatar.png\";\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 8,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Добро пожаловать, {name}</span>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        Выйти\n      </button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Регистрация\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Логин\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","/** @format */\n\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\n/**\n * 1. Он должен повторять API Route\n *  2. Он должен рендерить Route\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на redirectTo\n */\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","/** @format */\n\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\n/**\n * - Если маршрут ограниченный, и юзер залогинен, рендерит редирект на redirectTo\n * - В противном случае рендерит компонент\n *\n */\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = \"/\",\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","/** @format */\n\n// import { lazy, useEffect } from \"react\";\n// import { useDispatch } from \"react-redux\";\n// import { Switch, Route } from \"react-router-dom\";\n// import AppAll from \"./components/AppAll\";\n// // import HomeView from \"./views/HomeView\";\n// // import RegisterView from \"./views/RegisterView\";\n// // import LoginView from \"./views/LoginView\";\n// import Container from \"./components/Container\";\n// import { authOperations } from \"./redux/auth\";\n// // import Contacts from \"./views/Contacts\";\n\n// const HomeView = lazy(() => import(\"./views/HomeView\"));\n// const RegisterView = lazy(() => import(\"./views/RegisterView\"));\n// const LoginView = lazy(() => import(\"./views/LoginView\"));\n// const Contacts = lazy(() => import(\"./views/Contacts\"));\n\n// export default function App() {\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     dispatch(authOperations.fetchCurrentUser());\n//   }, [dispatch]);\n\n//   return (\n//     <Container>\n//       <AppAll />\n\n//       <Switch>\n//         <Route exact path=\"/\" component={HomeView} />\n//         <Route path=\"/register\" component={RegisterView} />\n//         <Route path=\"/login\" component={LoginView} />\n//         <Route path=\"/contacts\" component={Contacts} />\n//       </Switch>\n//     </Container>\n//   );\n// }\n\nimport { useEffect, Suspense, lazy } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport AppAll from \"./components/AppAll\";\nimport Container from \"./components/Container\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport PublicRoute from \"./components/PublicRoute\";\nimport { authOperations, authSelectors } from \"./redux/auth\";\n\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst Contacts = lazy(() => import(\"./views/Contacts\"));\nconst UploadView = lazy(() => import(\"./views/UploadView\"));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h1>Загружаем... </h1>\n      ) : (\n        <>\n          <AppAll />\n          <Switch>\n            <Suspense fallback={<p>Загружаем...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute\n                exact\n                path=\"/register\"\n                redirectTo=\"/contacts\"\n                restricted\n              >\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute\n                exact\n                path=\"/login\"\n                redirectTo=\"/contacts\"\n                restricted\n              >\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <Contacts />\n              </PrivateRoute>\n              <PrivateRoute path=\"/upload\" redirectTo=\"/login\">\n                <UploadView />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\n","/** @format */\n\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport allActions from \"./contacts-actions\";\nimport { contactsFetchDelete, contactsFetchPost } from \"./contacts-operation\";\n\nconst entris = createReducer([], {\n  [allActions.fetchContactSucess]: (_, { payload }) => payload,\n\n  // [contactsFetch.fulfilled]: (_, { payload }) => {\n  //   return payload;\n  // },\n\n  [contactsFetchPost.fulfilled]: (state, { payload }) => {\n    return payload ? [...state, payload] : state;\n  },\n\n  [contactsFetchDelete.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoding = createReducer(false, {\n  [allActions.fetchContactRequest]: () => true,\n  [allActions.fetchContactSucess]: () => false,\n  [allActions.fetchContactError]: () => false,\n\n  [contactsFetchPost.pending]: () => true,\n  [contactsFetchPost.fulfilled]: () => false,\n  [contactsFetchPost.rejected]: () => false,\n\n  [contactsFetchDelete.pending]: () => true,\n  [contactsFetchDelete.fulfilled]: () => false,\n  [contactsFetchDelete.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [allActions.fetchContactError]: (state, action) => action.payload,\n  [allActions.fetchContactSucess]: () => null,\n\n  [contactsFetchPost.rejected]: (state, action) => action.payload,\n  [contactsFetchPost.fulfilled]: () => null,\n\n  [contactsFetchDelete.rejected]: (state, action) => action.payload,\n  [contactsFetchDelete.fulfilled]: () => null,\n});\n\nconst reducerFilter = createReducer(\"\", {\n  [allActions.filters]: (_, { payload }) => payload,\n});\n\nconst contactsReduscer = combineReducers({\n  entris,\n  isLoding,\n  error,\n});\n\nconst allReducer = { contactsReduscer, reducerFilter };\n\nexport default allReducer;\n","/** @format */\n\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport allReducer from \"../redux/contacts/contacts-reduser-api\";\nimport { authReducer } from \"./auth\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: allReducer.contactsReduscer,\n    filter: allReducer.reducerFilter,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport App from \"./App\";\nimport { store, persistor } from \"./redux/store\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}